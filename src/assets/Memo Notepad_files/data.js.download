var DataUnitTests={};(function(){DataUnitTests.tests={_emptyNoteIdsFromNoteRows:function(cbk){async.auto({getEmptyNoteIds:function(go_on){var notes=[{deleted:1,id:"isDeleted",text:"text"},{deleted:1,dirty_since:new Date().toISOString(),id:"isDeletedDirty",text:"t"},{id:"noText",text:""},{dirty_since:new Date().toISOString(),id:"noTextDirty",text:""}];Data._emptyNoteIdsFromNoteRows({notes:notes},go_on);},deletedIsEmpty:["getEmptyNoteIds",function(go_on,res){if(!_(res.getEmptyNoteIds).contains("isDeleted")){return go_on([0,"Expected delete is empty"]);}
go_on();}],dirtyIsNotEmpty:["getEmptyNoteIds",function(go_on,res){if(_(res.getEmptyNoteIds).contains("noTextDirty")){return go_on([0,"Expected dirty no text not empty"]);}
if(_(res.getEmptyNoteIds).contains("isDeletedDirty")){return go_on([0,"Expected dirty deleted not empty"]);}
go_on();}],noTextIsEmpty:["getEmptyNoteIds",function(go_on,res){if(!_(res.getEmptyNoteIds).contains("noText")){return go_on([0,"Expected no text to be empty"]);}
go_on();}]},cbk);},_newNoteWithAttributes:function(cbk){async.auto({newLocalNote:function(go_on){Data._newNoteWithAttributes({destination:"test_url",destination_icon:"test_image_url",id:"test_id",text:"test_text"},go_on);},confirmLocalNote:["newLocalNote",function(go_on,res){var note=res.newLocalNote;if(note.destination!=="test_url"){return go_on([0,"Expected destination"]);}
if(!note.destination_last_modified){return go_on([0,"Expected url modified date"]);}
if(note.destination_icon!=="test_image_url"){return go_on([0,"Expected destination icon"]);}
if(!note.destination_icon_last_modified){return go_on([0,"Expected image url modified date"]);}
if(note.id!=="test_id"){return go_on([0,"Expected id"]);}
if(note.text!=="test_text"){return go_on([0,"Expected text"]);}
go_on();}]},cbk);},_rowWithLocalNoteModifications:function(cbk){var existingRow={id:"test_id",text:"test_string",text_last_modified:new Date(Date.now()-1000).toISOString()};async.auto({getChangedRow:function(go_on){Data._rowWithLocalNoteModifications({deleted:1,existingRow:existingRow,text:Array(Data.MAX_NOTE_LENGTH+2).join("")},go_on);},getForcedChanges:function(go_on){Data._rowWithLocalNoteModifications({existingRow:existingRow,force:true,text:existingRow.text},go_on);},getUnchangedRow:function(go_on){Data._rowWithLocalNoteModifications({existingRow:existingRow,text:existingRow.text},go_on);},confirmRowChanged:["getChangedRow",function(go_on,res){if(!res.getChangedRow){return go_on([0,"Expected changed row"]);}
var row=res.getChangedRow;if(row.text.length>Data.MAX_NOTE_LENGTH){return go_on([0,"Expected limited note text length"]);}
if(!row.deleted){return go_on([0,"Expected note deleted"]);}
if(!row.dirty_since){return go_on([0,"Expected dirty note"]);}
go_on();}],confirmForcedEdit:["getForcedChanges",function(go_on,res){if(!res.getChangedRow){return go_on([0,"Expected changed row"]);}
var originalDate=existingRow.text_last_modified;var updateDate=res.getForcedChanges.text_last_modified;if(originalDate===updateDate){return go_on([0,"Expected updated last modified"]);}
go_on();}],confirmRowUnchanged:["getUnchangedRow",function(go_on,res){if(!!res.getUnchangedRow){return go_on([0,"Expected row unchanged"]);}
go_on();}]},cbk);},_shouldUpdateDirtyRow:function(cbk){async.auto({dirtyAfterStartDoesNotNeedUpdate:function(go_on){var shouldUpdate=Data._shouldUpdateDirtyRow({cleaned_after:new Date().toISOString(),current_note:{dirty_since:new Date(Date.now()+9).toISOString()}});if(shouldUpdate){return go_on([0,"Expected no update needed"]);}
go_on();},dirtyNoteNeedsUpdate:function(go_on){var shouldUpdate=Data._shouldUpdateDirtyRow({cleaned_after:new Date().toISOString(),current_note:{dirty_since:new Date(Date.now()-9).toISOString()}});if(!shouldUpdate){return go_on([0,"Expected update needed"]);}
go_on();},notDirtyDoesNotNeedUpdate:function(go_on){var shouldUpdate=Data._shouldUpdateDirtyRow({cleaned_after:new Date().toISOString(),current_note:{}});if(shouldUpdate){return go_on([0,"Expected updated not needed"]);}
go_on();}},cbk);},_updatedNoteWithChanges:function(cbk){var date=new Date().toISOString();var date2=new Date(Date.now()+1000).toISOString();var existingRow={deleted:1,deleted_last_modified:date,invite_updates_count:1,locked:1,locked_last_modified:date,reminder_at_time:date,reminder_at_time_last_modified:date,response_updates_count:1,rev:1,text:"test_string",text_last_modified:date};var updatedRow={deleted:0,deleted_last_modified:date2,invite_updates_count:1,locked:0,locked_last_modified:date2,reminder_at_time:date2,reminder_at_time_last_modified:date2,response_updates_count:1,rev:2,text:"modified_string",text_last_modified:date2};async.auto({getNotUpdatedRow:function(go_on){Data._updatedNoteWithChanges({existing:existingRow,updated:existingRow},go_on);},getUpdatedRow:function(go_on){Data._updatedNoteWithChanges({existing:existingRow,updated:updatedRow},go_on);},confirmNotUpdated:["getNotUpdatedRow",function(go_on,res){if(!!res.getNotUpdatedRow){return go_on([0,"Expected not updated"]);}
go_on();}],confirmUpdatedRow:["getUpdatedRow",function(go_on,res){if(res.getUpdatedRow.last_modified!==date2){return go_on([0,"Expected last modified updated"]);}
var row=_(res.getUpdatedRow).omit("last_modified");var notMatching=Object.keys(row).filter(function(attr){return row[attr]!==updatedRow[attr];});if(!!notMatching.length){return go_on([0,"Expected updated values"]);}
go_on();}]},cbk);},getFirstVisibleNote:function(cbk){async.auto({sampleNotes:async.constant({empty_note:{id:"empty_note",text:""},normal_note:{id:"normal_note",text:"string"},visible_note:{id:"visible_note",text:"string"}}),getVisible:["sampleNotes",function(go_on,res){Data.getFirstVisibleNote({exclude_id:res.sampleNotes.normal_note.id,notes:[res.sampleNotes.empty_note,res.sampleNotes.normal_note,res.sampleNotes.visible_note]},go_on);}],noResults:["sampleNotes",function(go_on,res){Data.getFirstVisibleNote({exclude_id:res.sampleNotes.normal_note.id,notes:[res.sampleNotes.normal_note,res.sampleNotes.empty_note,]},go_on);}],confirmVisible:["getVisible",function(go_on,res){if(res.getVisible.id!=="visible_note"){return go_on([0,"Expected visible note",res]);}
go_on();}],confirmNoResults:["noResults",function(go_on,res){if(!!res.noResults){return go_on([0,"Expected no visible notes",res]);}
go_on();}]},cbk);},isHiddenNote:function(cbk){var deletedNote={text:"string",deleted:1};var emptyTextNote={text:""};var normalNote={text:"string"};if(!Data.isHiddenNote({note:deletedNote})){return cbk([0,"Expected deleted note hidden"]);}
if(!Data.isHiddenNote({note:emptyTextNote})){return cbk([0,"Expected empty note hidden"]);}
if(Data.isHiddenNote({note:normalNote})){return cbk([0,"Expected normal note not hidden"]);}
cbk();},uuid:function(cbk){var uuid=Data.uuid({});if(!uuid){return cbk([0,"Expected uuid"]);}
cbk();}};})();